class Solution {
    public List<List<Integer>> permute(int[] nums) {

        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        boolean fre[] = new boolean[nums.length];
        helper(nums,ans,ds,fre);
        return ans;
    }

    public void helper(int []nums,List<List<Integer>> ans,List<Integer> ds,boolean fre[])
    {
      if(ds.size()==nums.length)
      {
          ans.add(new ArrayList<>(ds));
          return;
      }

      for(int i=0;i<nums.length;i++)
      {
          if(fre[i]==false)
          {
              fre[i]=true;
              ds.add(nums[i]);
              helper(nums,ans,ds,fre);
              ds.remove(ds.size()-1);
              fre[i]=false;
          }
      }

    }
}
