class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean vis[] = new boolean[V+1];
        vis[0]=true;
        int start =0;
        ArrayList<Integer> ans= new ArrayList<>();
        dfs(0,adj,vis,ans);
        return ans;
    }
    
    public void dfs(int node,ArrayList<ArrayList<Integer>> adj,boolean vis[],ArrayList<Integer> ans)
    {
        
        vis[node]=true;
        ans.add(node);
        
        
        for(Integer i: adj.get(node))
        {
            if(vis[i]==false)
            {
             vis[i]=true;
             dfs(i,adj,vis,ans);
            }
        }
        
        
    }
}
