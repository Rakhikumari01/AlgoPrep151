class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int vis[] = new int[V];
        Stack<Integer> s = new Stack<>();
        
        for(int i=0;i<V;i++)
        {
            if(vis[i]==0)
             dfs(i,vis,s,adj);
        }
        
        int ans[] = new int[V];
        int i=0;
        while(!s.isEmpty())
        {
            ans[i++]=s.pop();
            
        }
        return ans;
    }
    
    public static void dfs(int node,int vis[],Stack<Integer> s, ArrayList<ArrayList<Integer>> adj)
    {
        vis[node]=1;
        
        for(int i:adj.get(node))
        {
            if(vis[i]==0)
            dfs(i,vis,s,adj);
        }
        s.push(node);
    }
}
